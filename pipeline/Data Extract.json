{
	"name": "Data Extract",
	"properties": {
		"activities": [
			{
				"name": "KPI",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "Drop table if exists #po\n\n--PO\nSELECT distinct\n       PO.Reference,\n\t   Tracks.IsClosed,\n\t   Tracks.IsCancelled,\n       PO.OrderNumber, \n       POCS.Product, \n       POCS.SKU, \n       PO.OrderDate, \n       PO.OrderType, \n       PO.Division, \n       PO.OriginCountryDesc, \n       ISNULL(NULLIF(POCS.ProductDepartment, ''), PO.Department) AS [Department], \n       PO.Supplier, \n       PO.Category, \n       PO.Season, \n       POCS.[Description], \n       POCS.Quantity\nINTO #PO\nFROM LH_PurchaseOrder_Principal AS PO\n     INNER JOIN LH_PurchaseOrderContractSummaryDetails_Principal AS POCS ON POCS.Reference = PO.Reference\n                                                                        AND POCS.Id = PO.Id\n     INNER JOIN LH_PurchaseOrderProductCard_Principal AS POPC ON POPC.Reference = POCS.Reference\n                                                             AND POPC.Id = POCS.Id\n                                                             AND POPC.ProductProduct = POCS.Product\n                                                             AND POPC.ProductIdentifier = POCS.Identifier\n                                                             AND POPC.ProductSKU = POCS.SKU\n\tINNER JOIN _ET$Tracks AS Tracks on Tracks.Reference = POCS.Reference\nWhere Tracks.iscancelled = 0\n\n\nDrop table if exists #manifest\n\n--Manifest\nSELECT DISTINCT \n\t   MS.reference,\n\t   MC.Id,\n\t   Tracks.IsClosed,\n\t   Tracks.IsCancelled,\n       MS._OrderNumber AS OrderNumber, \n       MS._Product AS Product, \n       MS._SKU AS SKU, \n       MC.Container AS Container, \n       MC.Equipment,\n\t   MC.Seal\nINTO #Manifest\nFROM LH_ManifestContainers_Principal MC\n     INNER JOIN LH_ManifestSKUs_Principal MS ON MS.Reference = MC.Reference\n                                            AND MS.Id = MC.Id\n                                            AND MS.SKUContainerID = MC.ContainerID\n\t INNER JOIN _ET$Tracks AS Tracks on Tracks.Reference = MS.Reference\nWhere Tracks.iscancelled = 0\n\nDrop table if exists #deliveryBooking\n\n--DeliveryBooking\nSELECT \n DISTINCT\n\t   DCBooking.Reference,\n\t   Tracks.IsClosed,\n\t   Tracks.IsCancelled,\n\t   DCBooking.Destination AS Warehouse, \n       DATEADD(dd, DATEDIFF(dd, 0, BookingDateTime), 0) AS BookingDate,\n       DCBooking.Haulier, \n       DCBookingItem.[OrderNumber] AS OrderNumber, \n       DCBookingItem.Product AS Product, \n       DCBookingItem.SKU, \n       TE.Achieved\nINTO #deliveryBooking\nFROM [LH_Delivery_Booking_Principal] AS DCBooking\n     INNER JOIN [LH_Delivery_Booking_Details_Event] AS DCBookingItem ON DCBookingItem.Reference = DCBooking.Reference\n                                                                        AND DCBookingItem.Id = DCBooking.Id\n     INNER JOIN _ET$TracksEvents AS TE ON TE.Reference = DCBooking.Reference\n\t\t\tAND  TE.Id = DCBooking.Id \n\t INNER JOIN _ET$Tracks Tracks ON Tracks.Reference = TE.Reference\n\n\ndrop table if exists #shipmentbooking\n--ShipmentBooking\n SELECT DISTINCT \n       ShipmentBooking.Reference, \n       Tracks.IsClosed, \n       Tracks.IsCancelled, \n       ShipmentBookingSKUs.OrderNumber, \n       ShipmentBookingSKUs.Product, \n       ShipmentBookingSKUs.SKU, \n       ShipmentBooking.Mode, \n       ShipmentBooking.Loading, \n       OriginPortDetails.PortName AS OriginPort, \n       DestinationPortDetails.PortName AS DestinationPort, \n       ShipmentBooking.MinETD, \n\t   ShipmentBooking.MaxETA,\n       ShipmentBookingSKUs.[Cube]\ninto #shipmentbooking\nFROM LH_ShipmentBooking_Principal AS ShipmentBooking\n     INNER JOIN _ET$Tracks AS Tracks ON Tracks.Reference = ShipmentBooking.Reference\n     INNER JOIN LH_ShipmentBookingSKUs_Event AS ShipmentBookingSKUs ON ShipmentBookingSKUs.Reference = ShipmentBooking.Reference\n                                                                       AND ShipmentBookingSKUs.Id = ShipmentBooking.Id\n\n     INNER JOIN _ET$TracksEvents AS BookingEvents ON BookingEvents.Reference = ShipmentBooking.Reference\n                                                     AND BookingEvents.Id = ShipmentBooking.Id\n\n     LEFT JOIN LIMA_Catalog_OriginPort AS OriginPortDetails ON OriginPortDetails.PortCode = ShipmentBooking.MinOriginPort\n     LEFT JOIN LIMA_Catalog_DestinationPort AS DestinationPortDetails ON DestinationPortDetails.PortCode = ShipmentBooking.MaxDestinationPort\nWhere Tracks.iscancelled = 0\n\n--Select * from #shipmentbooking\n\n\ndrop table if exists #Despatch\n--Despatch\nSELECT Distinct \n\t   Despatch.Reference, \n       Tracks.IsClosed, \n       Tracks.IsCancelled, \n       PrimaryLeg.Vessel,\n\t   Despatch.Shipper AS Carrier,\n       Despatch.MinCTD,\n\t   Despatch.MaxETA\ninto #Despatch\nFROM LH_Despatch_Principal AS Despatch\n     INNER JOIN LH_DespatchLegs_Event AS PrimaryLeg ON PrimaryLeg.Reference = Despatch.Reference\n                                                       AND PrimaryLeg.Id = Despatch.Id\n                                                       AND PrimaryLeg.PrimaryLeg = 1\n     INNER JOIN _ET$Tracks AS Tracks ON Tracks.Reference = Despatch.Reference\nWhere Tracks.iscancelled = 0\n\ndrop table if exists #ConfirmArrival\n--ConfirmArrival\nSELECT CA.Reference,\n\t   Tracks.IsClosed,\n\t   Tracks.IsCancelled, \n       CA.CurrentETA, \n       CA.ArrivalDate\ninto #ConfirmArrival\nFROM LH_ConfirmArrivalLegs_Event CA\n     INNER JOIN _ET$Tracks AS Tracks ON Tracks.Reference = CA.Reference\nWhere Tracks.iscancelled = 0\n\n\ndrop table if exists #DeliveryArrival\n--DeliveryArrival\nSELECT Distinct\n\t   Delivery.Reference,\n\t   Tracks.IsClosed,\n\t   Tracks.IsCancelled, \n       DeliveryItem.Container, \n       DeliveryItem.OrderNumber AS OrderNumber, \n       DeliveryItem.Product AS Product, \n       DeliveryItem.SKU, \n       DeliveryItem.DeliveryQuantity AS DeliveredQuantity\nINTO #DeliveryArrival\nFROM [LH_Delivery_Received_Principal] AS Delivery\n     INNER JOIN [LH_Delivery_Received_Details_Event] AS DeliveryItem ON DeliveryItem.Reference = Delivery.Reference\n                                                                        AND DeliveryItem.Id = Delivery.Id\n\t INNER JOIN _ET$Tracks AS Tracks ON Tracks.Reference = Delivery.Reference\nWhere Tracks.IsCancelled = 0\n\ndrop table if exists #ShipmentSummary\n--ShipmentSummary\nSELECT DISTINCT \n       Tracks.Reference, \n       Tracks.isClosed, \n       ISNULL(ManifestItem.GrossWeight, 0) AS KGS\nINTO #ShipmentSummary\nFROM _ET$Tracks AS Tracks\n     INNER JOIN LH_Despatch_Principal AS Despatch ON Despatch.Reference = Tracks.Reference\n     INNER JOIN LH_DespatchLegs_Principal AS DespatchLegs ON DespatchLegs.Reference = Tracks.Reference\n                                                             AND DespatchLegs.PrimaryLeg = 1\n     INNER JOIN LH_ManifestContainers_Principal AS ManifestCon ON ManifestCon.Reference = Despatch.Reference\n     INNER JOIN LH_ManifestSKUs_Principal ManifestItem ON ManifestCon.Reference = ManifestItem.Reference\n                                                          AND ManifestCon.ContainerID = ManifestItem.SKUContainerID\nWHERE Tracks.isCancelled = 0\n      AND NOT(ManifestItem._OrderNumber IS NULL\n              OR ManifestItem._OrderNumber = '');\n\nDrop table if exists #CustomsClearance\n--CustomsClearance\nSELECT CustomsClearance.Reference, \n       Tracks.IsClosed, \n       Tracks.IsCancelled, \n       CustomsClearanceContainers.ClearanceDate\nINTO #CustomsClearance\nFROM LH_CustomsClearance_Event AS CustomsClearance\n     INNER JOIN LH_CustomsClearanceContainers_Event AS CustomsClearanceContainers ON CustomsClearanceContainers.Reference = CustomsClearance.Reference\n                                                                                     AND CustomsClearanceContainers.Id = CustomsClearance.Id\n     INNER JOIN _ET$Tracks AS Tracks ON Tracks.Reference = CustomsClearance.Reference\nWhere Tracks.IsCancelled = 0\n\n\n\n\n\nSELECT DISTINCT \n       SPO.Reference, \n       SPO.OrderDate, \n       SPO.OrderNumber, \n       SPO.[Description], \n       SPO.Product, \n       SPO.SKU, \n       SPO.Season, \n       SPO.Division, \n       SPO.Department, \n       SPO.Category, \n       SPO.Supplier, \n       SPO.Quantity, \n       SPO.OriginCountryDesc, \n       SSB.MinETD, \n       SSB.OriginPort, \n       SSB.DestinationPort, \n       SSB.Mode, \n       SD.carrier, \n       SSB.Loading, \n       SSB.[Cube], \n       SD.MinCTD, \n       SD.Vessel, \n       SDB.BookingDate, \n       SDB.Achieved, \n       SDB.Haulier, \n       SCC.ClearanceDate, \n       SDB.Warehouse, \n       SCA.CurrentETA, \n\t   SSB.MaxETA as SSB_ETA,\n\t   SD.MaxETA as SD_ETA,\n\t   SCA.CurrentETA as SCA_ETA,\n\t   CASE\n\t\t\tWHEN SSB.MaxETA >= SD.MaxETA OR SSB.MaxETA >= SCA.CurrentETA THEN SSB.MaxETA\n\t\t\tWHEN SD.MaxETA >= SSB.MaxETA OR SD.MaxETA >= SCA.CurrentETA THEN SD.MaxETA\n\t\t\tWHEN SCA.CurrentETA >= SSB.MaxETA OR SCA.CurrentETA >= SD.MaxETA THEN SCA.CurrentETA \n\t\t\tELSE SSB.MaxETA\n\t   END AS ETA,\n       SCA.ArrivalDate, \n       SDA.DeliveredQuantity,\n       SM.Container, \n       SM.Seal, \n       SM.Equipment, \n       SS.KGS\nFROM #PO AS SPO\n     LEFT JOIN #ShipmentBooking AS SSB ON SPO.[OrderNumber] = SSB.[OrderNumber] \n\t\t\t\t\t\t\t\t\t\tAND SPO.Product = SSB.Product\n\t\t\t\t\t\t\t\t\t\tAND SPO.SKU = SSB.SKU\n     LEFT JOIN #Despatch AS SD ON SSB.Reference = SD.Reference\n     LEFT JOIN #ConfirmArrival AS SCA ON SSB.Reference = SCA.Reference\n     LEFT JOIN #DeliveryBooking AS SDB ON SPO.[OrderNumber] = SDB.[OrderNumber] \n\t\t\t\t\t\t\t\t\t\tAND SPO.Product = SDB.Product\n\t\t\t\t\t\t\t\t\t\tAND SPO.SKU = SDB.SKU\n     LEFT JOIN #DeliveryArrival AS SDA ON SDB.Reference = SDA.Reference\n\t\t\t\t\t\t\t\t\t\t\t\tAND SDB.OrderNumber = SDA.OrderNumber\n\t\t\t\t\t\t\t\t\t\t\t\tAND SDB.Product = SDA.Product\n\t\t\t\t\t\t\t\t\t\t\t\tAND SDB.SKU = SDA.SKU\n     LEFT JOIN #Manifest AS SM ON SPO.[OrderNumber] = SM.[OrderNumber] \n\t\t\t\t\t\t\t\t\tAND SPO.Product = SM.Product\n\t\t\t\t\t\t\t\t\tAND SPO.SKU = SM.SKU\n     LEFT JOIN #ShipmentSummary AS SS ON SSB.Reference = SS.Reference\n     LEFT JOIN #CustomsClearance AS SCC ON SPO.[Reference] = SCC.[Reference]\n\n"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Activity_Downstream_Demo",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CSVtoADL",
						"type": "DatasetReference"
					}
				]
			}
		],
		"folder": {
			"name": "Downstream_demo"
		},
		"annotations": []
	}
}